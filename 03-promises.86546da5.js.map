{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAdM,CACXQ,KAAMC,SAASC,cAAc,WAiB1BF,KAAKG,iBAAiB,UAAU,SAAAC,GACnCA,EAAMC,iBAQN,IANA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBd,MAAOkB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACfC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAYH,OAAOF,EAAOG,OAC5BG,EAAeL,EAEVM,EAAI,EAAGA,GAAKF,EAAWE,GAAK,EACnC5B,EAAc4B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QAAQ,qBAAoCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAEnEiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QAAQ,oBAAmCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAErEyB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.5;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  const firstDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const amountVal = Number(amount.value);\n  let promiseDelay = firstDelay;\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    promiseDelay += delayStep;\n  }\n});"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","firstDelay","Number","value","delayStep","amountVal","promiseDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.86546da5.js.map"}